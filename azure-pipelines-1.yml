pool:
  name: Azure Pipelines
  demands:
  - vstest
  - msbuild
  - visualstudio

steps:
- task: NuGetToolInstaller@0
  displayName: 'Use NuGet 4.4.1'
  inputs:
    versionSpec: 4.4.1

- task: NuGetCommand@2
  displayName: 'NuGet restore'
  inputs:
    restoreSolution: '$(Parameters.solution)'

- powershell: 'echo "hello"'
  errorActionPreference: silentlyContinue
  failOnStderr: true
  displayName: 'PowerShell Script'


- task: NuGetToolInstaller@1
  displayName: 'Use NuGet '

- task: richardfennellBM.BM-VSTS-StyleCop-Task.Stylecop-Runner.StyleCop@3
  displayName: 'StyleCop Runner '
  inputs: 
     # Required arguments
     treatStyleCopViolationsErrorsAsWarnings: False
     sourcefolder: $(build.SourcesDirectory)
     maximumViolationCount: 1000
     allowableViolationCount: 0
     showOutput: False
     cacheResults: False
     forceFullAnalysis: True
     loggingfolder: $(build.StagingDirectory)
     summaryFileName: stylecopsummary.md
     detailedSummary: False
 
- task: DotNetCoreCLI@2
  displayName: 'Install ReportGenerator'
  inputs:
    command: custom
    custom: tool
    arguments: 'install --global dotnet-reportgenerator-globaltool'

- task: VSBuild@1
  displayName: 'Build solution'
  inputs:
    solution: '$(Parameters.solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactstagingdirectory)\\"'
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'

- task: VSTest@2
  displayName: 'Test Assemblies'
  inputs:
    testAssemblyVer2: |
     **\$(BuildConfiguration)\*test*.dll
     !**\obj\**
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'

- task: PublishSymbols@2
  displayName: 'Publish symbols path'
  inputs:
    SearchPattern: '**\bin\**\*.pdb'
    PublishSymbols: false
  continueOnError: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
    ArtifactName: '$(Parameters.ArtifactName)'
  condition: succeededOrFailed()
